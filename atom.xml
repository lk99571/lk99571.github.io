<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Single</title>
  
  <subtitle>天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yasso.top/"/>
  <updated>2018-06-07T13:50:02.794Z</updated>
  <id>http://yasso.top/</id>
  
  <author>
    <name>Ronin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mybatis+spring整合（一）</title>
    <link href="http://yasso.top//blog/2018/06/05/spring+mybatis1/"/>
    <id>http://yasso.top//blog/2018/06/05/spring+mybatis1/</id>
    <published>2018-06-05T05:36:03.768Z</published>
    <updated>2018-06-07T13:50:02.794Z</updated>
    
    <content type="html"><![CDATA[<p>一. 添加spring和mybatis的jar包，注意还有个mybatis-spring.jar</p><p><img src="https://i.imgur.com/1xLUXao.png" alt=""></p><p>二.搭建项目结构</p><p><img src="https://i.imgur.com/3oLX18R.png" alt=""></p><p>三.编写applicationContext.xml文件：</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot;xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd        http://www.springframework.org/schema/tx        http://www.springframework.org/schema/tx/spring-tx.xsd        http://www.springframework.org/schema/aop        http://www.springframework.org/schema/aop/spring-aop.xsd        http://www.springframework.org/schema/context        http://www.springframework.org/schema/context/spring-context.xsd        http://www.springframework.org/schema/mvc        http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;&gt;&lt;!-- 包扫描 --&gt;&lt;context:component-scan base-package=&quot;com.bdqn.zmj&quot; /&gt;&lt;!-- 引入外部的db.properties文件 --&gt;&lt;!-- ctrl+shift+t --&gt;&lt;bean class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&gt;&lt;property name=&quot;location&quot; value=&quot;classpath:db.properties&quot; /&gt;&lt;/bean&gt;&lt;!-- 配置数据源 --&gt;&lt;!-- 用的是dbcp2连接池 --&gt;&lt;bean id=&quot;dataSource&quot; class=&quot;org.apache.commons.dbcp2.BasicDataSource&quot;&gt;&lt;property name=&quot;driverClassName&quot; value=&quot;${driver}&quot; /&gt;&lt;property name=&quot;url&quot; value=&quot;${url}&quot; /&gt;&lt;property name=&quot;username&quot; value=&quot;${user}&quot; /&gt;&lt;property name=&quot;password&quot; value=&quot;${password}&quot; /&gt;&lt;!-- 连接初始值，连接池启动时创建的连接数量的初始值 默认值是0 --&gt;&lt;property name=&quot;initialSize&quot; value=&quot;${initialSize}&quot; /&gt;&lt;!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 默认值是0 --&gt;&lt;property name=&quot;minIdle&quot; value=&quot;${minIdle}&quot; /&gt;&lt;!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 ，0时无限制 默认值是8 --&gt;&lt;property name=&quot;maxIdle&quot; value=&quot;${maxIdle}&quot; /&gt;&lt;/bean&gt;&lt;!-- 引入mybatis县相关配置文件 --&gt;&lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;&lt;!-- mybatis核心文件路径 --&gt;&lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;/&gt;&lt;!-- xml映射文件路径 --&gt;&lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:com/bdqn/zmj/mapper/*.xml&quot;/&gt;&lt;/bean&gt;&lt;!-- 配置dao层接口的扫描器 --&gt;&lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;&lt;!-- basePackage 属性是接口文件的包路径。 你可以使用分号或逗号 作为分隔符设置多于一个的包路径 --&gt;&lt;property name=&quot;basePackage&quot; value=&quot;com/bdqn/zmj/dao&quot;/&gt;&lt;!-- 引入SqlSessionFactoryBean --&gt;&lt;property name=&quot;sqlSessionFactoryBeanName&quot; value=&quot;sqlSessionFactory&quot;/&gt;&lt;/bean&gt;&lt;/beans&gt;</code></pre><p>四. 编写mybatis-config.xml文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE configuration  PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;  &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;&lt;configuration&gt;&lt;!-- 配置实体类的别名 --&gt;&lt;typeAliases&gt;&lt;package name=&quot;com.bdqn.zmj.entity&quot; /&gt;&lt;/typeAliases&gt;&lt;/configuration&gt;</code></pre><p>五.编写dao接口</p><pre><code>package com.bdqn.zmj.dao;import java.util.List;import com.bdqn.zmj.entity.User;public interface UserDao {/*** 全查询* @return*/List&lt;User&gt; getList();/*** 添加用户* @param user* @return*/int saveUser(User user);}</code></pre><p>六.编写service类</p><pre><code>package com.bdqn.zmj.service;import java.util.List;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.bdqn.zmj.dao.UserDao;import com.bdqn.zmj.entity.User;@Servicepublic class UserService {@AutowiredUserDao dao;public List&lt;User&gt; getUserInfo() {return dao.getList();}public int saveUser(User user) {return dao.saveUser(user);}}</code></pre><p>七.编写实体类</p><pre><code>package com.bdqn.zmj.entitypublic class User {private String userId;private String userName;private String passWord;private int age;public String getUserId() {return userId;}public void setUserId(String userId) {this.userId = userId;}public String getUserName() {return userName;}public void setUserName(String userName) {this.userName = userName;}public String getPassWord() {return passWord;}public void setPassWord(String passWord) {this.passWord = passWord;}public int getAge() {return age;}public void setAge(int age) {this.age = age;}}</code></pre><p>八.编写sql映射文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapper  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper namespace=&quot;com.bdqn.zmj.dao.UserDao&quot;&gt;&lt;!-- 自定义映射关系 --&gt;&lt;resultMap type=&quot;User&quot; id=&quot;userResultMap&quot;&gt;&lt;result property=&quot;userId&quot; column=&quot;user_id&quot;/&gt;&lt;result property=&quot;userName&quot; column=&quot;user_name&quot;/&gt;&lt;result property=&quot;passWord&quot; column=&quot;user_password&quot;/&gt;&lt;result property=&quot;age&quot; column=&quot;age&quot;/&gt;&lt;/resultMap&gt;&lt;select id=&quot;getList&quot; resultMap=&quot;userResultMap&quot;&gt;select * from t_user&lt;/select&gt;&lt;insert id=&quot;saveUser&quot; parameterType=&quot;User&quot;&gt;insert into t_user values(#{userId},#{userName},#{passWord},#{age})&lt;/insert&gt;&lt;/mapper&gt;</code></pre><p>九.编写测试类</p><pre><code>package com.bdqn.zmj.servlet;import java.util.List;import org.junit.Test;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ClassPathXmlApplicationContext;import com.alibaba.fastjson.JSON;import com.bdqn.zmj.entity.User;import com.bdqn.zmj.service.UserService;public class TestMain {UserService service;public void load(){ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);service = (UserService) ctx.getBean(&quot;userService&quot;);}@Testpublic void test1(){//首先创建serviceload();//调用方法List&lt;User&gt; list = service.getUserInfo();for (User user : list) {System.out.println(JSON.toJSONString(user));}}@Testpublic void test2(){//首先创建serviceload();//调用方法User user = new User();user.setUserId(&quot;003&quot;);user.setUserName(&quot;王五&quot;);user.setPassWord(&quot;1234&quot;);user.setAge(30);int result = service.saveUser(user);System.out.println(result);}}</code></pre><p>十.数据表结构</p><p><img src="https://i.imgur.com/IFLMEhW.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一. 添加spring和mybatis的jar包，注意还有个mybatis-spring.jar&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1xLUXao.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;二.搭建项目结构&lt;/p&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
      <category term="java学习笔记" scheme="http://yasso.top/categories/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建博客教程</title>
    <link href="http://yasso.top//blog/2018/06/03/Hexo1/"/>
    <id>http://yasso.top//blog/2018/06/03/Hexo1/</id>
    <published>2018-06-03T09:20:05.042Z</published>
    <updated>2018-06-07T13:50:52.645Z</updated>
    
    <content type="html"><![CDATA[<p><strong>搭建个人博客=域名(外网可访问的地址)+外网服务器(外网存储文件图片的地方)+解析(本地与服务器做映射)</strong></p><font size="5">1.下载git：</font><p>方式一(官网下载)：<a href="https://git-scm.com/download/win(到此页面后，稍微等一下会有下载弹框)" target="_blank" rel="noopener">https://git-scm.com/download/win(到此页面后，稍微等一下会有下载弹框)</a></p><p>方式二(csdn下载)：<a href="http://download.csdn.net/download/ainuser/9952103" target="_blank" rel="noopener">http://download.csdn.net/download/ainuser/9952103</a></p><font size="5">安装git(见图)：</font><br><img src="https://i.imgur.com/95LcHxT.jpg" alt=""><br><img src="https://i.imgur.com/mkJhp2s.jpg" alt=""><br><img src="https://i.imgur.com/4HpcyBk.jpg" alt=""><br><img src="https://i.imgur.com/u4k00ns.jpg" alt=""><br><img src="https://i.imgur.com/MXSc4un.jpg" alt=""><br><img src="https://i.imgur.com/1Nwxjn7.jpg" alt=""><br><img src="https://i.imgur.com/jsAQPS2.jpg" alt=""><br><img src="https://i.imgur.com/KzLrSVu.jpg" alt=""><br><br>安装git结束<br><br><font size="5">2.下载node.js：</font><br>下载方式一：<a href="http://nodejs.org/download/" target="_blank" rel="noopener">http://nodejs.org/download/</a><br><br>下载方式二：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br><br>下载方式三：<a href="http://download.csdn.net/download/ainuser/9952074" target="_blank" rel="noopener">http://download.csdn.net/download/ainuser/9952074</a><br><br><font size="5">安装node.js：</font><br><img src="https://i.imgur.com/ELteh8r.jpg" alt=""><br><img src="https://i.imgur.com/5DXv4CZ.jpg" alt=""><br><img src="https://i.imgur.com/vNOXGMi.jpg" alt=""><br><img src="https://i.imgur.com/rpdcy8K.jpg" alt=""><br><img src="https://i.imgur.com/gR2DFcK.jpg" alt=""><br><img src="https://i.imgur.com/vfQzUPz.jpg" alt=""><br><br>安装node.js结束<br><br><font size="5">3.安装hexo：</font><br>首先在本地磁盘中建立一个Hexo文件夹（名字随意）用于存储本地文件(做本地文件保存以及测试使用)<br><br><img src="https://i.imgur.com/kv1OsTj.jpg" alt=""><br><br><font color="red">然后在文件夹中右击打开git命令框</font><br><img src="https://i.imgur.com/WZSvO93.jpg" alt=""><br><br><font color="red">在git命令框中安装Hexo(npm<br> install -g hexo)</font><br><img src="https://i.imgur.com/SFEaYdy.jpg" alt=""><br><br><font color="red">初始化(hexo init)</font><br><img src="https://i.imgur.com/CGdLuld.jpg" alt=""><br><br><font color="red">启动服务(npm install –&gt;hexo server –&gt;hexo clean –&gt;hexo generate –&gt;hexo deploy)</font><br><img src="https://i.imgur.com/LYdhRKA.jpg" alt=""><br><br>浏览器输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>,按理来说应该会出现本地访问页面，但是按照此步骤可能不会出现<br><br><font color="red">注意：访问本地页面的时候hexo server 不可以按ctrl+c停止服务，否则会报404<br></font><p>解决：(npm install hexo-deployer-git –save)<br><img src="https://i.imgur.com/JQCpTFN.jpg" alt=""></p><p>重新部署更新<font color="red">(下面这条命令会经常用到)</font></p><p>(hexo<br> clean –&gt;hexo generate –&gt;hexo deploy)</p><p>本地测试:<br><img src="https://i.imgur.com/jEtIOwm.jpg" alt=""></p><font size="5">4.注册github</font><br>地址：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 输入账号、邮箱、密码,然后点击注册按钮.–&gt;之后验证邮箱<br><br><font size="5">在github上面创建项目(借用github服务器)</font><br><img src="https://i.imgur.com/rIXEpmp.jpg" alt=""><br><img src="https://i.imgur.com/2uiMwF4.jpg" alt=""><br>很多设置信息等都在setting里面大家可以去这里面找想要的设置选项等等信息<br><img src="https://i.imgur.com/8Ld6XpZ.jpg" alt=""><br><font size="5">购买域名：<a href="https://wanwang.aliyun.com/domain/" target="_blank" rel="noopener">https://wanwang.aliyun.com/domain/</a></font><br><font size="5">购买流程</font><br><img src="https://i.imgur.com/yMJIZQY.jpg" alt=""><br><br>下面的流程就跟淘宝购物一样了，别选多余的，就购买域名即可，其他的全家桶就不要购买了<br><img src="https://i.imgur.com/kbnjdi1.jpg" alt=""><br><br>支付成功之后的截图<br><img src="https://i.imgur.com/NwmF3PE.png" alt=""><br><br>然后就是解析(通俗来讲也就是本地与服务器做映射)<br><img src="https://i.imgur.com/ID0z4DD.jpg" alt=""><br><img src="https://i.imgur.com/LST7mKT.jpg" alt=""><br><br>然后设置网站解析(让你输入的IP是这样得到的)<br><br>键盘快捷键win+r输入cmd回车/或者win+x-&gt;a-&gt;是<br>得到如下dos窗口后输入ping ainusers.github.io(ainusers是我的名字，就是上面注册github项目的名字即你的用户名)<br><br>因为你刚才创建的项目已经被放到github服务器上面了，所以你这样相当于租用了github的服务器<br><img src="https://i.imgur.com/76shvCG.jpg" alt=""><br><br>将IP输入到解析网站的弹框中即可完成解析<br><br>还有三个需要设置的地方:<br><br>a：<br><img src="https://i.imgur.com/Bvu2M6E.jpg" alt=""><br><br>b：在D盘Hexo目录下的source中建一个CNAME命名的文件夹(切记没有后缀)<br><br>创建方式<br>右键新建txt文本-&gt;输入你购买的域名 <a href="http://www.ainusers.top" target="_blank" rel="noopener">http://www.ainusers.top</a> -&gt;保存关闭<br>然后快捷键F2或者右键该文本重命名-&gt;将.txt后缀去掉-&gt;会提示文件不可用继续确定即可<br><img src="https://i.imgur.com/SKXpITt.jpg" alt=""><br><br>内容如下所示<br><img src="https://i.imgur.com/qx1Fbm2.jpg" alt=""><br><br>c：绑定域名<br><img src="https://i.imgur.com/9RcYFFY.jpg" alt=""><br><img src="https://i.imgur.com/QBYlyD1.jpg" alt=""><br><img src="https://i.imgur.com/xVY7RKr.jpg" alt=""><br><img src="https://i.imgur.com/kcLZO98.jpg" alt=""><br><font color="red">注意，如果为不可选状态，请先选择Theme Chooser选项，然后选择一个主题，然后再执行上步操作</font><p>域名从.github.io后缀修改成你的域名后缀，才可以说明你以上步骤正确。</p><p>我在网上找了一个例子，比如下图所示<br><img src="https://i.imgur.com/JXhMCFi.png" alt=""></p><p>修改_config.yml<br><img src="https://i.imgur.com/EJ1qo3p.jpg" alt=""></p><p>配置github项目连接(<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repository: https://github.com/leopardpan/leopardpan.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p><p>):<br><img src="https://i.imgur.com/RBNxTC3.jpg" alt=""></p><p>使git部署</p><p><code>npm install hexo-deployer-git --save</code></p><p>基本的流程到这里快要结束了</p><p>最后执行:(hexo<br> clean –&gt;hexo generate –&gt;hexo deploy)</p><p>你就可以看到你的博客了</p><p>记住，每次修改配置信息或者其他必须要执行上面的步骤，才可以使得配置信息生效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;搭建个人博客=域名(外网可访问的地址)+外网服务器(外网存储文件图片的地方)+解析(本地与服务器做映射)&lt;/strong&gt;&lt;/p&gt;
&lt;font size=&quot;5&quot;&gt;1.下载git：&lt;/font&gt;

&lt;p&gt;方式一(官网下载)：&lt;a href=&quot;https://g
      
    
    </summary>
    
      <category term="其他" scheme="http://yasso.top/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
</feed>
